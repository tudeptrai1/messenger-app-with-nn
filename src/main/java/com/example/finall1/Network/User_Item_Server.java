
package Network;

import BUS.ClassBUS;
import com.example.finall1.DTO.UserDTO;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;



public class User_Item_Server extends javax.swing.JPanel {

    UserDTO user;
    String status;
    JTextArea text;
    ClassBUS bus = new ClassBUS();

    /**
     * Creates new form User_item
     */
    public User_Item_Server() {
        initComponents();
        this.setVisible(true);
        this.setSize(440, 130);
    }

    public User_Item_Server(UserDTO user, String status,JTextArea txt) {
        this.user = user;
        this.status = status;
        this.text = txt;
        initComponents();
        idUser.setText("ID : " + String.valueOf(user.getId()));
        nameUser.setText("Name : " + user.getName());
        emailUser.setText("Email : " + user.getEmail());
        statusUser.setText(status);

        try {

            switch (status) {
                case "Online": {
                    statusUser.setForeground(Color.decode("#0bba3a"));
                    unblockbtn.setVisible(false);
                    break;
                }
                case "Offline": {
                    statusUser.setForeground(Color.decode("#ff9500"));
                    unblockbtn.setVisible(false);
                    break;
                }
                case "Block": {
                    statusUser.setForeground(Color.decode("#ff1e00"));
                    blockbtn.setVisible(false);
                    break;
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Override
    public String toString() {
        return "User_Item_Server{" + "name=" + user + ", status=" + status + '}';
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        idUser = new javax.swing.JLabel();
        emailUser = new javax.swing.JLabel();
        unblockbtn = new javax.swing.JButton();
        blockbtn = new javax.swing.JButton();
        nameUser = new javax.swing.JLabel();
        statusUser = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));

        idUser.setFont(new java.awt.Font("Arimo", 1, 18)); // NOI18N
        idUser.setText("id");

        emailUser.setFont(new java.awt.Font("Arimo", 0, 18)); // NOI18N
        emailUser.setText("email");

        unblockbtn.setBackground(new java.awt.Color(254, 254, 254));
        unblockbtn.setFont(new java.awt.Font("Arimo", 1, 18)); // NOI18N
        unblockbtn.setForeground(new java.awt.Color(255, 0, 0));
        unblockbtn.setText("UnBlock");
        unblockbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                unblockbtnMouseClicked(evt);
            }
        });

        blockbtn.setBackground(new java.awt.Color(255, 0, 0));
        blockbtn.setFont(new java.awt.Font("Arimo", 1, 18)); // NOI18N
        blockbtn.setForeground(new java.awt.Color(254, 254, 254));
        blockbtn.setText("Block");
        blockbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                blockbtnMouseClicked(evt);
            }
        });

        nameUser.setFont(new java.awt.Font("Arimo", 0, 18)); // NOI18N
        nameUser.setText("name");

        statusUser.setFont(new java.awt.Font("Arimo", 0, 18)); // NOI18N
        statusUser.setText("status");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idUser, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailUser, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusUser, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameUser, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(blockbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(unblockbtn)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(idUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(unblockbtn)
                    .addComponent(blockbtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void blockbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_blockbtnMouseClicked
        // TODO add your handling code here:
        int choose = JOptionPane.showConfirmDialog(null, "Bạn có muốn khóa User này ?","Xác nhận",JOptionPane.YES_NO_OPTION);
        if(choose != 0){
            return;
        }
        boolean rs = bus.blockUser(user.getId());
        if(rs){
            JOptionPane.showMessageDialog(null, "Khóa User thành công");
            String tmp = text.getText();
            text.setText(tmp + "\nServer : Block user " + user.getEmail() + " successfully");
        }
        else{
            JOptionPane.showMessageDialog(null, "Lỗi khi khóa User");
            String tmp = text.getText();
            text.setText(tmp + "\nServer : Block user " + user.getEmail() + " fail");
        }
    }//GEN-LAST:event_blockbtnMouseClicked

    private void unblockbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_unblockbtnMouseClicked
        // TODO add your handling code here:
        int choose = JOptionPane.showConfirmDialog(null, "Bạn có muốn mở khóa User này ?","Xác nhận",JOptionPane.YES_NO_OPTION);
        if(choose != 0){
            return;
        }
        boolean rs = bus.unblockUser(user.getId());
        if(rs){
            JOptionPane.showMessageDialog(null, "Mở khóa User thành công");
            String tmp = text.getText();
            text.setText(tmp + "\nServer : Unblock user " + user.getEmail() + " successfully");
        }
        else{
            JOptionPane.showMessageDialog(null, "Lỗi khi mở khóa User");
            String tmp = text.getText();
            text.setText(tmp + "\nServer : Unblock user " + user.getEmail() + " fail");
        }        
    }//GEN-LAST:event_unblockbtnMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton blockbtn;
    private javax.swing.JLabel emailUser;
    private javax.swing.JLabel idUser;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel nameUser;
    private javax.swing.JLabel statusUser;
    private javax.swing.JButton unblockbtn;
    // End of variables declaration//GEN-END:variables
}
